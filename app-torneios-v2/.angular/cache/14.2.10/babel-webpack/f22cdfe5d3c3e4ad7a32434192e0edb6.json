{"ast":null,"code":"// IMPORTANT: this is a plugin which requires jQuery for initialisation and data manipulation\nimport { SimpleChanges } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/core\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/select\";\n\nfunction WizardComponent_mat_option_103_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 65);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const city_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", city_r1.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", city_r1.viewValue, \" \");\n  }\n}\n\nexport class MyErrorStateMatcher {\n  isErrorState(control, form) {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n\n}\nexport let WizardComponent = /*#__PURE__*/(() => {\n  class WizardComponent {\n    constructor(formBuilder) {\n      this.formBuilder = formBuilder;\n      this.cities = [{\n        value: 'paris-0',\n        viewValue: 'Paris'\n      }, {\n        value: 'miami-1',\n        viewValue: 'Miami'\n      }, {\n        value: 'bucharest-2',\n        viewValue: 'Bucharest'\n      }, {\n        value: 'new-york-3',\n        viewValue: 'New York'\n      }, {\n        value: 'london-4',\n        viewValue: 'London'\n      }, {\n        value: 'barcelona-5',\n        viewValue: 'Barcelona'\n      }, {\n        value: 'moscow-6',\n        viewValue: 'Moscow'\n      }];\n      this.emailFormControl = new FormControl('', [Validators.required, Validators.email]);\n      this.matcher = new MyErrorStateMatcher();\n    }\n\n    isFieldValid(form, field) {\n      return !form.get(field).valid && form.get(field).touched;\n    }\n\n    displayFieldCss(form, field) {\n      return {\n        'has-error': this.isFieldValid(form, field),\n        'has-feedback': this.isFieldValid(form, field)\n      };\n    }\n\n    ngOnInit() {\n      const elemMainPanel = document.querySelector('.main-panel');\n      this.type = this.formBuilder.group({\n        // To add a validator, we must first convert the string value into an array. The first item in the array is the default value if any, then the next item in the array is the validator. Here we are adding a required validator meaning that the firstName attribute must have a value in it.\n        firstName: [null, Validators.required],\n        lastName: [null, Validators.required],\n        email: [null, [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]]\n      }); // Code for the Validator\n\n      const $validator = $('.card-wizard form').validate({\n        rules: {\n          firstname: {\n            required: true,\n            minlength: 3\n          },\n          lastname: {\n            required: true,\n            minlength: 3\n          },\n          email: {\n            required: true,\n            minlength: 3\n          }\n        },\n        highlight: function (element) {\n          $(element).closest('.form-group').removeClass('has-success').addClass('has-danger');\n        },\n        success: function (element) {\n          $(element).closest('.form-group').removeClass('has-danger').addClass('has-success');\n        },\n        errorPlacement: function (error, element) {\n          $(element).append(error);\n        }\n      }); // Wizard Initialization\n\n      $('.card-wizard').bootstrapWizard({\n        'tabClass': 'nav nav-pills',\n        'nextSelector': '.btn-next',\n        'previousSelector': '.btn-previous',\n        onNext: function (tab, navigation, index) {\n          var $valid = $('.card-wizard form').valid();\n\n          if (!$valid) {\n            $validator.focusInvalid();\n            return false;\n          }\n        },\n        onInit: function (tab, navigation, index) {\n          // check number of tabs and fill the entire row\n          let $total = navigation.find('li').length;\n          let $wizard = navigation.closest('.card-wizard');\n          let $first_li = navigation.find('li:first-child a').html();\n          let $moving_div = $('<div class=\"moving-tab\">' + $first_li + '</div>');\n          $('.card-wizard .wizard-navigation').append($moving_div);\n          $total = $wizard.find('.nav li').length;\n          let $li_width = 100 / $total;\n          let total_steps = $wizard.find('.nav li').length;\n          let move_distance = $wizard.width() / total_steps;\n          let index_temp = index;\n          let vertical_level = 0;\n          let mobile_device = $(document).width() < 600 && $total > 3;\n\n          if (mobile_device) {\n            move_distance = $wizard.width() / 2;\n            index_temp = index % 2;\n            $li_width = 50;\n          }\n\n          $wizard.find('.nav li').css('width', $li_width + '%');\n          let step_width = move_distance;\n          move_distance = move_distance * index_temp;\n          let $current = index + 1;\n\n          if ($current == 1 || mobile_device == true && index % 2 == 0) {\n            move_distance -= 8;\n          } else if ($current == total_steps || mobile_device == true && index % 2 == 1) {\n            move_distance += 8;\n          }\n\n          if (mobile_device) {\n            let x = index / 2;\n            vertical_level = parseInt(x);\n            vertical_level = vertical_level * 38;\n          }\n\n          $wizard.find('.moving-tab').css('width', step_width);\n          $('.moving-tab').css({\n            'transform': 'translate3d(' + move_distance + 'px, ' + vertical_level + 'px, 0)',\n            'transition': 'all 0.5s cubic-bezier(0.29, 1.42, 0.79, 1)'\n          });\n          $('.moving-tab').css('transition', 'transform 0s');\n        },\n        onTabClick: function (tab, navigation, index) {\n          const $valid = $('.card-wizard form').valid();\n\n          if (!$valid) {\n            return false;\n          } else {\n            return true;\n          }\n        },\n        onTabShow: function (tab, navigation, index) {\n          let $total = navigation.find('li').length;\n          let $current = index + 1;\n          elemMainPanel.scrollTop = 0;\n          const $wizard = navigation.closest('.card-wizard'); // If it's the last tab then hide the last button and show the finish instead\n\n          if ($current >= $total) {\n            $($wizard).find('.btn-next').hide();\n            $($wizard).find('.btn-finish').show();\n          } else {\n            $($wizard).find('.btn-next').show();\n            $($wizard).find('.btn-finish').hide();\n          }\n\n          const button_text = navigation.find('li:nth-child(' + $current + ') a').html();\n          setTimeout(function () {\n            $('.moving-tab').text(button_text);\n          }, 150);\n          const checkbox = $('.footer-checkbox');\n\n          if (index !== 0) {\n            $(checkbox).css({\n              'opacity': '0',\n              'visibility': 'hidden',\n              'position': 'absolute'\n            });\n          } else {\n            $(checkbox).css({\n              'opacity': '1',\n              'visibility': 'visible'\n            });\n          }\n\n          $total = $wizard.find('.nav li').length;\n          let $li_width = 100 / $total;\n          let total_steps = $wizard.find('.nav li').length;\n          let move_distance = $wizard.width() / total_steps;\n          let index_temp = index;\n          let vertical_level = 0;\n          let mobile_device = $(document).width() < 600 && $total > 3;\n\n          if (mobile_device) {\n            move_distance = $wizard.width() / 2;\n            index_temp = index % 2;\n            $li_width = 50;\n          }\n\n          $wizard.find('.nav li').css('width', $li_width + '%');\n          let step_width = move_distance;\n          move_distance = move_distance * index_temp;\n          $current = index + 1;\n\n          if ($current == 1 || mobile_device == true && index % 2 == 0) {\n            move_distance -= 8;\n          } else if ($current == total_steps || mobile_device == true && index % 2 == 1) {\n            move_distance += 8;\n          }\n\n          if (mobile_device) {\n            let x = index / 2;\n            vertical_level = parseInt(x);\n            vertical_level = vertical_level * 38;\n          }\n\n          $wizard.find('.moving-tab').css('width', step_width);\n          $('.moving-tab').css({\n            'transform': 'translate3d(' + move_distance + 'px, ' + vertical_level + 'px, 0)',\n            'transition': 'all 0.5s cubic-bezier(0.29, 1.42, 0.79, 1)'\n          });\n        }\n      }); // Prepare the preview for profile picture\n\n      $('#wizard-picture').change(function () {\n        const input = $(this);\n\n        if (input[0].files && input[0].files[0]) {\n          const reader = new FileReader();\n\n          reader.onload = function (e) {\n            $('#wizardPicturePreview').attr('src', e.target.result).fadeIn('slow');\n          };\n\n          reader.readAsDataURL(input[0].files[0]);\n        }\n      });\n      $('[data-toggle=\"wizard-radio\"]').click(function () {\n        const wizard = $(this).closest('.card-wizard');\n        wizard.find('[data-toggle=\"wizard-radio\"]').removeClass('active');\n        $(this).addClass('active');\n        $(wizard).find('[type=\"radio\"]').removeAttr('checked');\n        $(this).find('[type=\"radio\"]').attr('checked', 'true');\n      });\n      $('[data-toggle=\"wizard-checkbox\"]').click(function () {\n        if ($(this).hasClass('active')) {\n          $(this).removeClass('active');\n          $(this).find('[type=\"checkbox\"]').removeAttr('checked');\n        } else {\n          $(this).addClass('active');\n          $(this).find('[type=\"checkbox\"]').attr('checked', 'true');\n        }\n      });\n      $('.set-full-height').css('height', 'auto');\n    }\n\n    ngOnChanges(changes) {\n      const input = $(this);\n\n      if (input[0].files && input[0].files[0]) {\n        const reader = new FileReader();\n\n        reader.onload = function (e) {\n          $('#wizardPicturePreview').attr('src', e.target.result).fadeIn('slow');\n        };\n\n        reader.readAsDataURL(input[0].files[0]);\n      }\n    }\n\n    ngAfterViewInit() {\n      $(window).resize(() => {\n        $('.card-wizard').each(function () {\n          setTimeout(() => {\n            const $wizard = $(this);\n            const index = $wizard.bootstrapWizard('currentIndex');\n            let $total = $wizard.find('.nav li').length;\n            let $li_width = 100 / $total;\n            let total_steps = $wizard.find('.nav li').length;\n            let move_distance = $wizard.width() / total_steps;\n            let index_temp = index;\n            let vertical_level = 0;\n            let mobile_device = $(document).width() < 600 && $total > 3;\n\n            if (mobile_device) {\n              move_distance = $wizard.width() / 2;\n              index_temp = index % 2;\n              $li_width = 50;\n            }\n\n            $wizard.find('.nav li').css('width', $li_width + '%');\n            let step_width = move_distance;\n            move_distance = move_distance * index_temp;\n            let $current = index + 1;\n\n            if ($current == 1 || mobile_device == true && index % 2 == 0) {\n              move_distance -= 8;\n            } else if ($current == total_steps || mobile_device == true && index % 2 == 1) {\n              move_distance += 8;\n            }\n\n            if (mobile_device) {\n              let x = index / 2;\n              vertical_level = parseInt(x);\n              vertical_level = vertical_level * 38;\n            }\n\n            $wizard.find('.moving-tab').css('width', step_width);\n            $('.moving-tab').css({\n              'transform': 'translate3d(' + move_distance + 'px, ' + vertical_level + 'px, 0)',\n              'transition': 'all 0.5s cubic-bezier(0.29, 1.42, 0.79, 1)'\n            });\n            $('.moving-tab').css({\n              'transition': 'transform 0s'\n            });\n          }, 500);\n        });\n      });\n    }\n\n  }\n\n  WizardComponent.ɵfac = function WizardComponent_Factory(t) {\n    return new (t || WizardComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n\n  WizardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WizardComponent,\n    selectors: [[\"app-wizard-cmp\"]],\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 111,\n    vars: 5,\n    consts: [[1, \"main-content\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-8\", \"mr-auto\", \"ml-auto\"], [1, \"wizard-container\"], [\"data-color\", \"rose\", \"id\", \"wizardProfile\", 1, \"card\", \"card-wizard\"], [\"action\", \"\", \"method\", \"\", 3, \"formGroup\"], [1, \"card-header\", \"text-center\"], [1, \"card-title\"], [1, \"card-description\"], [1, \"wizard-navigation\"], [1, \"nav\", \"nav-pills\"], [1, \"nav-item\"], [\"href\", \"#about\", \"data-toggle\", \"tab\", \"role\", \"tab\", 1, \"nav-link\", \"active\"], [\"href\", \"#account\", \"data-toggle\", \"tab\", \"role\", \"tab\", 1, \"nav-link\"], [\"href\", \"#address\", \"data-toggle\", \"tab\", \"role\", \"tab\", 1, \"nav-link\"], [1, \"card-body\"], [1, \"tab-content\"], [\"id\", \"about\", 1, \"tab-pane\", \"active\"], [1, \"info-text\"], [1, \"row\", \"justify-content-center\"], [1, \"col-sm-4\"], [1, \"picture-container\"], [1, \"picture\"], [\"src\", \"./assets/img/default-avatar.png\", \"id\", \"wizardPicturePreview\", \"title\", \"\", 1, \"picture-src\"], [\"type\", \"file\", \"id\", \"wizard-picture\"], [1, \"description\"], [1, \"col-sm-6\"], [1, \"input-group\", \"form-control-lg\"], [1, \"input-group-prepend\"], [1, \"input-group-text\"], [1, \"material-icons\"], [1, \"example-full-width\", \"has-label\", 3, \"ngClass\"], [\"type\", \"text\", \"name\", \"firstname\", \"matInput\", \"\", \"id\", \"text\", \"placeholder\", \"First Name\", \"formControlName\", \"firstName\"], [\"type\", \"text\", \"name\", \"lastname\", \"matInput\", \"\", \"id\", \"text\", \"placeholder\", \"last Name\", \"formControlName\", \"lastName\"], [1, \"col-lg-10\", \"mt-3\"], [1, \"example-full-width\"], [\"matInput\", \"\", \"placeholder\", \"Email (required)\", \"type\", \"email\", \"id\", \"exampleemalil\", \"name\", \"email\", 3, \"formControl\"], [\"id\", \"account\", 1, \"tab-pane\"], [1, \"col-lg-10\"], [\"data-toggle\", \"wizard-checkbox\", 1, \"choice\"], [\"type\", \"checkbox\", \"name\", \"jobb\", \"value\", \"Design\"], [1, \"icon\"], [1, \"fa\", \"fa-pencil\"], [\"type\", \"checkbox\", \"name\", \"jobb\", \"value\", \"Code\"], [1, \"fa\", \"fa-terminal\"], [\"type\", \"checkbox\", \"name\", \"jobb\", \"value\", \"Develop\"], [1, \"fa\", \"fa-laptop\"], [\"id\", \"address\", 1, \"tab-pane\"], [1, \"col-sm-12\"], [1, \"col-sm-7\"], [\"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"Street Name\"], [1, \"col-sm-3\"], [\"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"Street No.\"], [1, \"col-sm-5\"], [\"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"City\"], [\"placeholder\", \"Single City\", \"name\", \"city\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"card-footer\"], [1, \"mr-auto\"], [\"type\", \"button\", \"name\", \"previous\", \"value\", \"Previous\", 1, \"btn\", \"btn-previous\", \"btn-fill\", \"btn-default\", \"btn-wd\", \"disabled\"], [1, \"ml-auto\"], [\"type\", \"button\", \"name\", \"next\", \"value\", \"Next\", 1, \"btn\", \"btn-next\", \"btn-fill\", \"btn-rose\", \"btn-wd\"], [\"type\", \"button\", \"name\", \"finish\", \"value\", \"Finish\", 1, \"btn\", \"btn-finish\", \"btn-fill\", \"btn-rose\", \"btn-wd\", 2, \"display\", \"none\"], [1, \"clearfix\"], [3, \"value\"]],\n    template: function WizardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"form\", 6)(7, \"div\", 7)(8, \"h3\", 8);\n        i0.ɵɵtext(9, \" Build Your Profile \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"h5\", 9);\n        i0.ɵɵtext(11, \"This information will let us know more about you.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 10)(13, \"ul\", 11)(14, \"li\", 12)(15, \"a\", 13);\n        i0.ɵɵtext(16, \" About \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"li\", 12)(18, \"a\", 14);\n        i0.ɵɵtext(19, \" Account \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"li\", 12)(21, \"a\", 15);\n        i0.ɵɵtext(22, \" Address \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(23, \"div\", 16)(24, \"div\", 17)(25, \"div\", 18)(26, \"h5\", 19);\n        i0.ɵɵtext(27, \" Let's start with the basic information (with validation)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 20)(29, \"div\", 21)(30, \"div\", 22)(31, \"div\", 23);\n        i0.ɵɵelement(32, \"img\", 24)(33, \"input\", 25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"h6\", 26);\n        i0.ɵɵtext(35, \"Choose Picture\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(36, \"div\", 27)(37, \"div\", 28)(38, \"div\", 29)(39, \"span\", 30)(40, \"i\", 31);\n        i0.ɵɵtext(41, \"face\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(42, \"mat-form-field\", 32);\n        i0.ɵɵelement(43, \"input\", 33);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(44, \"div\", 28)(45, \"div\", 29)(46, \"span\", 30)(47, \"i\", 31);\n        i0.ɵɵtext(48, \"record_voice_over\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(49, \"mat-form-field\", 32);\n        i0.ɵɵelement(50, \"input\", 34);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(51, \"div\", 35)(52, \"div\", 28)(53, \"div\", 29)(54, \"span\", 30)(55, \"i\", 31);\n        i0.ɵɵtext(56, \"email\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(57, \"mat-form-field\", 36);\n        i0.ɵɵelement(58, \"input\", 37);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(59, \"div\", 38)(60, \"h5\", 19);\n        i0.ɵɵtext(61, \" What are you doing? (checkboxes) \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(62, \"div\", 20)(63, \"div\", 39)(64, \"div\", 2)(65, \"div\", 21)(66, \"div\", 40);\n        i0.ɵɵelement(67, \"input\", 41);\n        i0.ɵɵelementStart(68, \"div\", 42);\n        i0.ɵɵelement(69, \"i\", 43);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(70, \"h6\");\n        i0.ɵɵtext(71, \"Design\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(72, \"div\", 21)(73, \"div\", 40);\n        i0.ɵɵelement(74, \"input\", 44);\n        i0.ɵɵelementStart(75, \"div\", 42);\n        i0.ɵɵelement(76, \"i\", 45);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(77, \"h6\");\n        i0.ɵɵtext(78, \"Code\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(79, \"div\", 21)(80, \"div\", 40);\n        i0.ɵɵelement(81, \"input\", 46);\n        i0.ɵɵelementStart(82, \"div\", 42);\n        i0.ɵɵelement(83, \"i\", 47);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(84, \"h6\");\n        i0.ɵɵtext(85, \"Develop\");\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵelementStart(86, \"div\", 48)(87, \"div\", 20)(88, \"div\", 49)(89, \"h5\", 19);\n        i0.ɵɵtext(90, \" Are you living in a nice area? \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(91, \"div\", 50)(92, \"mat-form-field\", 36);\n        i0.ɵɵelement(93, \"input\", 51);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(94, \"div\", 52)(95, \"mat-form-field\", 36);\n        i0.ɵɵelement(96, \"input\", 53);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(97, \"div\", 54)(98, \"mat-form-field\", 36);\n        i0.ɵɵelement(99, \"input\", 55);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(100, \"div\", 54)(101, \"mat-form-field\")(102, \"mat-select\", 56);\n        i0.ɵɵtemplate(103, WizardComponent_mat_option_103_Template, 2, 2, \"mat-option\", 57);\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵelementStart(104, \"div\", 58)(105, \"div\", 59);\n        i0.ɵɵelement(106, \"input\", 60);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(107, \"div\", 61);\n        i0.ɵɵelement(108, \"input\", 62)(109, \"input\", 63);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(110, \"div\", 64);\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.type);\n        i0.ɵɵadvance(36);\n        i0.ɵɵproperty(\"ngClass\", ctx.displayFieldCss(ctx.type, \"firstName\"));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngClass\", ctx.displayFieldCss(ctx.type, \"lastName\"));\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"formControl\", ctx.emailFormControl);\n        i0.ɵɵadvance(45);\n        i0.ɵɵproperty(\"ngForOf\", ctx.cities);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgForOf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormControlDirective, i1.FormGroupDirective, i1.FormControlName, i3.MatOption, i4.MatFormField, i5.MatInput, i6.MatSelect]\n  });\n  return WizardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}