{"ast":null,"code":"import { Router, NavigationEnd, NavigationStart } from '@angular/router';\nimport { NavItemType } from '../../md/md.module';\nimport { Location, PopStateEvent } from '@angular/common';\nimport { NavbarComponent } from '../../shared/navbar/navbar.component';\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../sidebar/sidebar.component\";\nimport * as i4 from \"../../shared/navbar/navbar.component\";\nimport * as i5 from \"../../shared/footer/footer.component\";\nimport * as i6 from \"../../shared/fixedplugin/fixedplugin.component\";\nconst _c0 = [\"sidebar\"];\n\nfunction AdminLayoutComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-footer-cmp\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let AdminLayoutComponent = /*#__PURE__*/(() => {\n  class AdminLayoutComponent {\n    constructor(router, location) {\n      this.router = router;\n      this.yScrollStack = [];\n      this.location = location;\n    }\n\n    ngOnInit() {\n      const elemMainPanel = document.querySelector('.main-panel');\n      const elemSidebar = document.querySelector('.sidebar .sidebar-wrapper');\n      this.location.subscribe(ev => {\n        this.lastPoppedUrl = ev.url;\n      });\n      this.router.events.subscribe(event => {\n        if (event instanceof NavigationStart) {\n          if (event.url != this.lastPoppedUrl) this.yScrollStack.push(window.scrollY);\n        } else if (event instanceof NavigationEnd) {\n          if (event.url == this.lastPoppedUrl) {\n            this.lastPoppedUrl = undefined;\n            window.scrollTo(0, this.yScrollStack.pop());\n          } else window.scrollTo(0, 0);\n        }\n      });\n      this._router = this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\n        elemMainPanel.scrollTop = 0;\n        elemSidebar.scrollTop = 0;\n      });\n      const html = document.getElementsByTagName('html')[0];\n\n      if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\n        let ps = new PerfectScrollbar(elemMainPanel);\n        ps = new PerfectScrollbar(elemSidebar);\n        html.classList.add('perfect-scrollbar-on');\n      } else {\n        html.classList.add('perfect-scrollbar-off');\n      }\n\n      this._router = this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\n        this.navbar.sidebarClose();\n      });\n      this.navItems = [{\n        type: NavItemType.NavbarLeft,\n        title: 'Dashboard',\n        iconClass: 'fa fa-dashboard'\n      }, {\n        type: NavItemType.NavbarRight,\n        title: '',\n        iconClass: 'fa fa-bell-o',\n        numNotifications: 5,\n        dropdownItems: [{\n          title: 'Notification 1'\n        }, {\n          title: 'Notification 2'\n        }, {\n          title: 'Notification 3'\n        }, {\n          title: 'Notification 4'\n        }, {\n          title: 'Another Notification'\n        }]\n      }, {\n        type: NavItemType.NavbarRight,\n        title: '',\n        iconClass: 'fa fa-list',\n        dropdownItems: [{\n          iconClass: 'pe-7s-mail',\n          title: 'Messages'\n        }, {\n          iconClass: 'pe-7s-help1',\n          title: 'Help Center'\n        }, {\n          iconClass: 'pe-7s-tools',\n          title: 'Settings'\n        }, 'separator', {\n          iconClass: 'pe-7s-lock',\n          title: 'Lock Screen'\n        }, {\n          iconClass: 'pe-7s-close-circle',\n          title: 'Log Out'\n        }]\n      }, {\n        type: NavItemType.NavbarLeft,\n        title: 'Search',\n        iconClass: 'fa fa-search'\n      }, {\n        type: NavItemType.NavbarLeft,\n        title: 'Account'\n      }, {\n        type: NavItemType.NavbarLeft,\n        title: 'Dropdown',\n        dropdownItems: [{\n          title: 'Action'\n        }, {\n          title: 'Another action'\n        }, {\n          title: 'Something'\n        }, {\n          title: 'Another action'\n        }, {\n          title: 'Something'\n        }, 'separator', {\n          title: 'Separated link'\n        }]\n      }, {\n        type: NavItemType.NavbarLeft,\n        title: 'Log out'\n      }];\n    }\n\n    ngAfterViewInit() {\n      this.runOnRouteChange();\n    }\n\n    isMap() {\n      if (this.location.prepareExternalUrl(this.location.path()) === '/maps/fullscreen') {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    runOnRouteChange() {\n      if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\n        const elemSidebar = document.querySelector('.sidebar .sidebar-wrapper');\n        const elemMainPanel = document.querySelector('.main-panel');\n        let ps = new PerfectScrollbar(elemMainPanel);\n        ps = new PerfectScrollbar(elemSidebar);\n        ps.update();\n      }\n    }\n\n    isMac() {\n      let bool = false;\n\n      if (navigator.platform.toUpperCase().indexOf('MAC') >= 0 || navigator.platform.toUpperCase().indexOf('IPAD') >= 0) {\n        bool = true;\n      }\n\n      return bool;\n    }\n\n  }\n\n  AdminLayoutComponent.ɵfac = function AdminLayoutComponent_Factory(t) {\n    return new (t || AdminLayoutComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.Location));\n  };\n\n  AdminLayoutComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdminLayoutComponent,\n    selectors: [[\"app-layout\"]],\n    viewQuery: function AdminLayoutComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(NavbarComponent, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sidebar = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.navbar = _t.first);\n      }\n    },\n    decls: 9,\n    vars: 1,\n    consts: [[1, \"wrapper\"], [\"data-color\", \"white\", \"data-background-color\", \"red\", \"data-image\", \"./assets/img/sidebar-1.jpg\", 1, \"sidebar\"], [1, \"sidebar-background\", 2, \"background-image\", \"url(assets/img/sidebar-1.jpg)\"], [1, \"main-panel\"], [4, \"ngIf\"]],\n    template: function AdminLayoutComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"app-sidebar-cmp\")(3, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelement(5, \"app-navbar-cmp\")(6, \"router-outlet\");\n        i0.ɵɵtemplate(7, AdminLayoutComponent_div_7_Template, 2, 0, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"app-fixedplugin\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isMap());\n      }\n    },\n    dependencies: [i2.NgIf, i1.RouterOutlet, i3.SidebarComponent, i4.NavbarComponent, i5.FooterComponent, i6.FixedpluginComponent],\n    encapsulation: 2\n  });\n  return AdminLayoutComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}