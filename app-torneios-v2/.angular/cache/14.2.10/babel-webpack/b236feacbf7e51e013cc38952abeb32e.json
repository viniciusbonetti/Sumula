{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/dev02/Documents/GitHub/Sumula/app-torneios-v2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport axios from \"axios\";\nimport * as i0 from \"@angular/core\";\nexport let ControllerComponent = /*#__PURE__*/(() => {\n  class ControllerComponent {\n    constructor() {\n      this.baseUrl = \"http://dornez.vps-kinghost.net/sumulaApi/api\";\n      this.tenant = localStorage.getItem(\"tenant\");\n      this.paths = {\n        atleta: \"/atleta\",\n        cargocco: \"/cargocco\",\n        ccoevento: \"/ccoevento\",\n        contatoatleta: \"/contatoatleta\",\n        delegacao: \"/delegacao\",\n        documentoatleta: \"/documentoatleta\",\n        estado: \"/estado\",\n        evento: \"/evento\",\n        inscricaodelegacao: \"/inscricaodelegacao\",\n        modalidade: \"/modalidade\",\n        modalidadeatleta: \"/modalidadeatleta\",\n        modalidadeevento: \"/modalidadeevento\",\n        municipio: \"/municipio\",\n        municipioevento: \"/municipioevento\",\n        tenant: \"/tenant\",\n        tenantusuario: \"/tenantusuario\",\n        user: \"/user\"\n      };\n    }\n\n    ngOnInit() {}\n\n    getInfo(path, header) {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        _this.formError();\n\n        let urlGet = _this.baseUrl + path;\n\n        try {\n          let getInfo = yield axios.get(urlGet, header);\n          return getInfo.data.data;\n        } catch (error) {\n          _this.mostrarErros(error);\n        }\n      })();\n    }\n\n    postInfo(path, form, header) {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        _this2.formError();\n\n        let urlPost = _this2.baseUrl + path;\n\n        try {\n          let sendInfo = yield axios.post(urlPost, form, header);\n          return sendInfo.data.data;\n        } catch (error) {\n          _this2.mostrarErros(error);\n        }\n      })();\n    }\n\n    putInfo(path, form, header) {\n      var _this3 = this;\n\n      return _asyncToGenerator(function* () {\n        _this3.formError();\n\n        let urlPut = _this3.baseUrl + path;\n\n        try {\n          let putInfo = yield axios.put(urlPut, form, header);\n          return putInfo;\n        } catch (error) {\n          _this3.mostrarErros(error);\n\n          return error;\n        }\n      })();\n    }\n\n    deleteInfo(path, header) {\n      var _this4 = this;\n\n      return _asyncToGenerator(function* () {\n        _this4.formError();\n\n        let urlDelete = _this4.baseUrl + path;\n\n        try {\n          let deleteInfo = yield axios.delete(urlDelete, header);\n          return deleteInfo;\n        } catch (error) {\n          _this4.mostrarErros(error);\n        }\n      })();\n    }\n\n    formError() {\n      var formError = document.getElementsByClassName(\"form-error\");\n\n      for (let i = 0; i < formError.length; i++) {\n        formError[i].classList.remove(\"text-danger\");\n        formError[i].innerHTML = \"\";\n      }\n    }\n\n    mostrarErros(error) {\n      var erros = error.response.data.data;\n\n      for (let i = 0; i < erros.length; i++) {\n        var span = document.getElementsByClassName(erros[i].campo)[0];\n        span.textContent = erros[i].mensagem;\n        span.classList.add(\"text-danger\");\n      }\n\n      this.showNotification(\"bottom\", \"center\", error.response.data.message, \"danger\");\n    }\n\n    showNotification(from, align, message, type) {\n      $.notify({\n        icon: \"add_alert\",\n        message: message\n      }, {\n        type: type,\n        timer: 4000,\n        placement: {\n          from: from,\n          align: align\n        }\n      });\n    }\n\n  }\n\n  ControllerComponent.ɵfac = function ControllerComponent_Factory(t) {\n    return new (t || ControllerComponent)();\n  };\n\n  ControllerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ControllerComponent,\n    selectors: [[\"controller\"]],\n    decls: 2,\n    vars: 0,\n    template: function ControllerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"controller works!\");\n        i0.ɵɵelementEnd();\n      }\n    }\n  });\n  ControllerComponent.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ControllerComponent,\n    factory: ControllerComponent.ɵfac\n  });\n  return ControllerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}