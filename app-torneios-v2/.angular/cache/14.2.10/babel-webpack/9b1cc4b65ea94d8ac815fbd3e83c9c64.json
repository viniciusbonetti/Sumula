{"ast":null,"code":"import * as Chartist from 'chartist';\nimport * as i0 from \"@angular/core\";\nexport let ChartsComponent = /*#__PURE__*/(() => {\n  class ChartsComponent {\n    startAnimationForLineChart(chart) {\n      let seq, delays, durations;\n      seq = 0;\n      delays = 80;\n      durations = 500;\n      chart.on('draw', function (data) {\n        if (data.type === 'line' || data.type === 'area') {\n          data.element.animate({\n            d: {\n              begin: 600,\n              dur: 700,\n              from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\n              to: data.path.clone().stringify(),\n              easing: Chartist.Svg.Easing.easeOutQuint\n            }\n          });\n        } else if (data.type === 'point') {\n          seq++;\n          data.element.animate({\n            opacity: {\n              begin: seq * delays,\n              dur: durations,\n              from: 0,\n              to: 1,\n              easing: 'ease'\n            }\n          });\n        }\n      });\n      seq = 0;\n    }\n\n    startAnimationForBarChart(chart) {\n      let seq2, delays2, durations2;\n      seq2 = 0;\n      delays2 = 80;\n      durations2 = 500;\n      chart.on('draw', function (data) {\n        if (data.type === 'bar') {\n          seq2++;\n          data.element.animate({\n            opacity: {\n              begin: seq2 * delays2,\n              dur: durations2,\n              from: 0,\n              to: 1,\n              easing: 'ease'\n            }\n          });\n        }\n      });\n      seq2 = 0;\n    }\n\n    ngOnInit() {\n      /* ----------==========    Rounded Line Chart initialization    ==========---------- */\n      const dataRoundedLineChart = {\n        labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n        series: [[12, 17, 7, 17, 23, 18, 38]]\n      };\n      const optionsRoundedLineChart = {\n        lineSmooth: Chartist.Interpolation.cardinal({\n          tension: 10\n        }),\n        axisX: {\n          showGrid: false\n        },\n        low: 0,\n        high: 50,\n        chartPadding: {\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0\n        },\n        showPoint: false,\n        showLine: true\n      };\n      const RoundedLineChart = new Chartist.Line('#roundedLineChart', dataRoundedLineChart, optionsRoundedLineChart);\n      this.startAnimationForLineChart(RoundedLineChart);\n      /*  **************** Straight Lines Chart - single line with points ******************** */\n\n      const dataStraightLinesChart = {\n        labels: ['\\'07', '\\'08', '\\'09', '\\'10', '\\'11', '\\'12', '\\'13', '\\'14', '\\'15'],\n        series: [[10, 16, 8, 13, 20, 15, 20, 34, 30]]\n      };\n      const optionsStraightLinesChart = {\n        lineSmooth: Chartist.Interpolation.cardinal({\n          tension: 0\n        }),\n        low: 0,\n        high: 50,\n        // something for a better look\n        chartPadding: {\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0\n        },\n        classNames: {\n          point: 'ct-point ct-white',\n          line: 'ct-line ct-white'\n        }\n      };\n      const straightLinesChart = new Chartist.Line('#straightLinesChart', dataStraightLinesChart, optionsStraightLinesChart);\n      this.startAnimationForLineChart(straightLinesChart);\n      /*  **************** Coloured Rounded Line Chart - Line Chart ******************** */\n\n      const dataColouredRoundedLineChart = {\n        labels: ['\\'06', '\\'07', '\\'08', '\\'09', '\\'10', '\\'11', '\\'12', '\\'13', '\\'14', '\\'15'],\n        series: [[287, 480, 290, 554, 690, 690, 500, 752, 650, 900, 944]]\n      };\n      const optionsColouredRoundedLineChart = {\n        lineSmooth: Chartist.Interpolation.cardinal({\n          tension: 10\n        }),\n        axisY: {\n          showGrid: true,\n          offset: 40\n        },\n        axisX: {\n          showGrid: false\n        },\n        low: 0,\n        high: 1000,\n        showPoint: true,\n        height: '300px'\n      };\n      const colouredRoundedLineChart = new Chartist.Line('#colouredRoundedLineChart', dataColouredRoundedLineChart, optionsColouredRoundedLineChart);\n      this.startAnimationForLineChart(colouredRoundedLineChart);\n      /*  **************** Coloured Rounded Line Chart - Line Chart ******************** */\n\n      const dataColouredBarsChart = {\n        labels: ['\\'06', '\\'07', '\\'08', '\\'09', '\\'10', '\\'11', '\\'12', '\\'13', '\\'14', '\\'15'],\n        series: [[287, 385, 490, 554, 586, 698, 695, 752, 788, 846, 944], [67, 152, 143, 287, 335, 435, 437, 539, 542, 544, 647], [23, 113, 67, 190, 239, 307, 308, 439, 410, 410, 509]]\n      };\n      const optionsColouredBarsChart = {\n        lineSmooth: Chartist.Interpolation.cardinal({\n          tension: 10\n        }),\n        axisY: {\n          showGrid: true,\n          offset: 40\n        },\n        axisX: {\n          showGrid: false\n        },\n        low: 0,\n        high: 1000,\n        showPoint: true,\n        height: '300px'\n      };\n      const colouredBarsChart = new Chartist.Line('#colouredBarsChart', dataColouredBarsChart, optionsColouredBarsChart);\n      this.startAnimationForLineChart(colouredBarsChart);\n      /*  **************** Public Preferences - Pie Chart ******************** */\n\n      const dataPreferences = {\n        labels: ['62%', '32%', '6%'],\n        series: [62, 32, 6]\n      };\n      const optionsPreferences = {\n        height: '230px'\n      };\n      new Chartist.Pie('#chartPreferences', dataPreferences, optionsPreferences);\n      /*  **************** Simple Bar Chart - barchart ******************** */\n\n      const dataSimpleBarChart = {\n        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        series: [[542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]]\n      };\n      const optionsSimpleBarChart = {\n        seriesBarDistance: 10,\n        axisX: {\n          showGrid: false\n        }\n      };\n      const responsiveOptionsSimpleBarChart = [['screen and (max-width: 640px)', {\n        seriesBarDistance: 5,\n        axisX: {\n          labelInterpolationFnc: function (value) {\n            return value[0];\n          }\n        }\n      }]];\n      const simpleBarChart = new Chartist.Bar('#simpleBarChart', dataSimpleBarChart, optionsSimpleBarChart, responsiveOptionsSimpleBarChart); // start animation for the Emails Subscription Chart\n\n      this.startAnimationForBarChart(simpleBarChart);\n      const dataMultipleBarsChart = {\n        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        series: [[542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895], [412, 243, 280, 580, 453, 353, 300, 364, 368, 410, 636, 695]]\n      };\n      const optionsMultipleBarsChart = {\n        seriesBarDistance: 10,\n        axisX: {\n          showGrid: false\n        },\n        height: '300px'\n      };\n      const responsiveOptionsMultipleBarsChart = [['screen and (max-width: 640px)', {\n        seriesBarDistance: 5,\n        axisX: {\n          labelInterpolationFnc: function (value) {\n            return value[0];\n          }\n        }\n      }]];\n      const multipleBarsChart = new Chartist.Bar('#multipleBarsChart', dataMultipleBarsChart, optionsMultipleBarsChart, responsiveOptionsMultipleBarsChart); // start animation for the Emails Subscription Chart\n\n      this.startAnimationForBarChart(multipleBarsChart);\n    }\n\n  }\n\n  ChartsComponent.ɵfac = function ChartsComponent_Factory(t) {\n    return new (t || ChartsComponent)();\n  };\n\n  ChartsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChartsComponent,\n    selectors: [[\"app-charts-cmp\"]],\n    decls: 101,\n    vars: 0,\n    consts: [[1, \"main-content\"], [1, \"container-fluid\"], [1, \"header\", \"text-center\"], [1, \"title\"], [1, \"category\"], [\"target\", \"_blank\", \"href\", \"https://gionkunz.github.io/chartist-js/\"], [\"href\", \"https://gionkunz.github.io/chartist-js/getting-started.html\", \"target\", \"_blank\"], [1, \"row\"], [1, \"col-md-4\"], [1, \"card\", \"card-chart\"], [1, \"card-header\", \"card-header-rose\"], [\"id\", \"roundedLineChart\", 1, \"ct-chart\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-category\"], [1, \"card-header\", \"card-header-warning\"], [\"id\", \"straightLinesChart\", 1, \"ct-chart\"], [1, \"card-header\", \"card-header-info\"], [\"id\", \"simpleBarChart\", 1, \"ct-chart\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"card-header\", \"card-header-icon\", \"card-header-info\"], [1, \"card-icon\"], [1, \"material-icons\"], [\"id\", \"colouredRoundedLineChart\", 1, \"ct-chart\"], [1, \"card-header\", \"card-header-icon\", \"card-header-rose\"], [\"id\", \"multipleBarsChart\", 1, \"ct-chart\"], [1, \"col-md-7\"], [\"id\", \"colouredBarsChart\", 1, \"ct-chart\"], [1, \"col-md-5\"], [1, \"card-header\", \"card-header-icon\", \"card-header-danger\"], [\"id\", \"chartPreferences\", 1, \"ct-chart\"], [1, \"card-footer\"], [1, \"col-md-12\"], [1, \"fa\", \"fa-circle\", \"text-info\"], [1, \"fa\", \"fa-circle\", \"text-warning\"], [1, \"fa\", \"fa-circle\", \"text-danger\"]],\n    template: function ChartsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 1)(3, \"div\", 2)(4, \"h3\", 3);\n        i0.ɵɵtext(5, \"Chartist.js\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"p\", 4);\n        i0.ɵɵtext(7, \"Handcrafted by our friends from \");\n        i0.ɵɵelementStart(8, \"a\", 5);\n        i0.ɵɵtext(9, \"Chartist.js\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(10, \". Please checkout their \");\n        i0.ɵɵelementStart(11, \"a\", 6);\n        i0.ɵɵtext(12, \"full documentation.\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"div\", 7)(14, \"div\", 8)(15, \"div\", 9)(16, \"div\", 10);\n        i0.ɵɵelement(17, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 12)(19, \"h4\", 13);\n        i0.ɵɵtext(20, \"Rounded Line Chart\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"p\", 14);\n        i0.ɵɵtext(22, \"Line Chart\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(23, \"div\", 8)(24, \"div\", 9)(25, \"div\", 15);\n        i0.ɵɵelement(26, \"div\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 12)(28, \"h4\", 13);\n        i0.ɵɵtext(29, \"Straight Lines Chart\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"p\", 14);\n        i0.ɵɵtext(31, \"Line Chart with Points\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(32, \"div\", 8)(33, \"div\", 9)(34, \"div\", 17);\n        i0.ɵɵelement(35, \"div\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"div\", 12)(37, \"h4\", 13);\n        i0.ɵɵtext(38, \"Simple Bar Chart\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"p\", 14);\n        i0.ɵɵtext(40, \"Bar Chart\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(41, \"div\", 7)(42, \"div\", 19)(43, \"div\", 20)(44, \"div\", 21)(45, \"div\", 22)(46, \"i\", 23);\n        i0.ɵɵtext(47, \"timeline\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(48, \"h4\", 13);\n        i0.ɵɵtext(49, \"Coloured Line Chart \");\n        i0.ɵɵelementStart(50, \"small\");\n        i0.ɵɵtext(51, \" - Rounded\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(52, \"div\", 12);\n        i0.ɵɵelement(53, \"div\", 24);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(54, \"div\", 19)(55, \"div\", 20)(56, \"div\", 25)(57, \"div\", 22)(58, \"i\", 23);\n        i0.ɵɵtext(59, \"insert_chart\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(60, \"h4\", 13);\n        i0.ɵɵtext(61, \"Multiple Bars Chart \");\n        i0.ɵɵelementStart(62, \"small\");\n        i0.ɵɵtext(63, \"- Bar Chart\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(64, \"div\", 12);\n        i0.ɵɵelement(65, \"div\", 26);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(66, \"div\", 7)(67, \"div\", 27)(68, \"div\", 20)(69, \"div\", 21)(70, \"div\", 22)(71, \"i\", 23);\n        i0.ɵɵtext(72, \"timeline\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(73, \"h4\", 13);\n        i0.ɵɵtext(74, \"Coloured Bars Chart \");\n        i0.ɵɵelementStart(75, \"small\");\n        i0.ɵɵtext(76, \" - Rounded\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(77, \"div\", 12);\n        i0.ɵɵelement(78, \"div\", 28);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(79, \"div\", 29)(80, \"div\", 9)(81, \"div\", 30)(82, \"div\", 22)(83, \"i\", 23);\n        i0.ɵɵtext(84, \"pie_chart\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(85, \"h4\", 13);\n        i0.ɵɵtext(86, \"Pie Chart\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(87, \"div\", 12);\n        i0.ɵɵelement(88, \"div\", 31);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(89, \"div\", 32)(90, \"div\", 7)(91, \"div\", 33)(92, \"h6\", 14);\n        i0.ɵɵtext(93, \"Legend\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(94, \"div\", 33);\n        i0.ɵɵelement(95, \"i\", 34);\n        i0.ɵɵtext(96, \" Apple \");\n        i0.ɵɵelement(97, \"i\", 35);\n        i0.ɵɵtext(98, \" Samsung \");\n        i0.ɵɵelement(99, \"i\", 36);\n        i0.ɵɵtext(100, \" Windows Phone \");\n        i0.ɵɵelementEnd()()()()()()()()();\n      }\n    },\n    encapsulation: 2\n  });\n  return ChartsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}