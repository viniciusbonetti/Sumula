{"ast":null,"code":"import { Renderer2, ElementRef } from '@angular/core';\nimport { ROUTES } from '../.././sidebar/sidebar.component';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { Location } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nconst _c0 = [\"app-navbar-cmp\"];\nconst misc = {\n  navbar_menu_visible: 0,\n  active_collapse: true,\n  disabled_collapse_init: 0\n};\nexport let NavbarComponent = /*#__PURE__*/(() => {\n  class NavbarComponent {\n    constructor(location, renderer, element, router) {\n      this.renderer = renderer;\n      this.element = element;\n      this.router = router;\n      this.mobile_menu_visible = 0;\n      this.location = location;\n      this.nativeElement = element.nativeElement;\n      this.sidebarVisible = false;\n    }\n\n    minimizeSidebar() {\n      const body = document.getElementsByTagName('body')[0];\n\n      if (misc.sidebar_mini_active === true) {\n        body.classList.remove('sidebar-mini');\n        misc.sidebar_mini_active = false;\n      } else {\n        setTimeout(function () {\n          body.classList.add('sidebar-mini');\n          misc.sidebar_mini_active = true;\n        }, 300);\n      } // we simulate the window Resize so the charts will get updated in realtime.\n\n\n      const simulateWindowResize = setInterval(function () {\n        window.dispatchEvent(new Event('resize'));\n      }, 180); // we stop the simulation of Window Resize after the animations are completed\n\n      setTimeout(function () {\n        clearInterval(simulateWindowResize);\n      }, 1000);\n    }\n\n    hideSidebar() {\n      const body = document.getElementsByTagName('body')[0];\n      const sidebar = document.getElementsByClassName('sidebar')[0];\n\n      if (misc.hide_sidebar_active === true) {\n        setTimeout(function () {\n          body.classList.remove('hide-sidebar');\n          misc.hide_sidebar_active = false;\n        }, 300);\n        setTimeout(function () {\n          sidebar.classList.remove('animation');\n        }, 600);\n        sidebar.classList.add('animation');\n      } else {\n        setTimeout(function () {\n          body.classList.add('hide-sidebar'); // $('.sidebar').addClass('animation');\n\n          misc.hide_sidebar_active = true;\n        }, 300);\n      } // we simulate the window Resize so the charts will get updated in realtime.\n\n\n      const simulateWindowResize = setInterval(function () {\n        window.dispatchEvent(new Event('resize'));\n      }, 180); // we stop the simulation of Window Resize after the animations are completed\n\n      setTimeout(function () {\n        clearInterval(simulateWindowResize);\n      }, 1000);\n    }\n\n    ngOnInit() {\n      this.listTitles = ROUTES.filter(listTitle => listTitle);\n      const navbar = this.element.nativeElement;\n      const body = document.getElementsByTagName('body')[0];\n      this.toggleButton = navbar.getElementsByClassName('navbar-toggler')[0];\n\n      if (body.classList.contains('sidebar-mini')) {\n        misc.sidebar_mini_active = true;\n      }\n\n      if (body.classList.contains('hide-sidebar')) {\n        misc.hide_sidebar_active = true;\n      }\n\n      this._router = this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\n        this.sidebarClose();\n        const $layer = document.getElementsByClassName('close-layer')[0];\n\n        if ($layer) {\n          $layer.remove();\n        }\n      });\n    }\n\n    onResize(event) {\n      if ($(window).width() > 991) {\n        return false;\n      }\n\n      return true;\n    }\n\n    sidebarOpen() {\n      var $toggle = document.getElementsByClassName('navbar-toggler')[0];\n      const toggleButton = this.toggleButton;\n      const body = document.getElementsByTagName('body')[0];\n      setTimeout(function () {\n        toggleButton.classList.add('toggled');\n      }, 500);\n      body.classList.add('nav-open');\n      setTimeout(function () {\n        $toggle.classList.add('toggled');\n      }, 430);\n      var $layer = document.createElement('div');\n      $layer.setAttribute('class', 'close-layer');\n\n      if (body.querySelectorAll('.main-panel')) {\n        document.getElementsByClassName('main-panel')[0].appendChild($layer);\n      } else if (body.classList.contains('off-canvas-sidebar')) {\n        document.getElementsByClassName('wrapper-full-page')[0].appendChild($layer);\n      }\n\n      setTimeout(function () {\n        $layer.classList.add('visible');\n      }, 100);\n\n      $layer.onclick = function () {\n        body.classList.remove('nav-open');\n        this.mobile_menu_visible = 0;\n        this.sidebarVisible = false;\n        $layer.classList.remove('visible');\n        setTimeout(function () {\n          $layer.remove();\n          $toggle.classList.remove('toggled');\n        }, 400);\n      }.bind(this);\n\n      body.classList.add('nav-open');\n      this.mobile_menu_visible = 1;\n      this.sidebarVisible = true;\n    }\n\n    sidebarClose() {\n      var $toggle = document.getElementsByClassName('navbar-toggler')[0];\n      const body = document.getElementsByTagName('body')[0];\n      this.toggleButton.classList.remove('toggled');\n      var $layer = document.createElement('div');\n      $layer.setAttribute('class', 'close-layer');\n      this.sidebarVisible = false;\n      body.classList.remove('nav-open'); // $('html').removeClass('nav-open');\n\n      body.classList.remove('nav-open');\n\n      if ($layer) {\n        $layer.remove();\n      }\n\n      setTimeout(function () {\n        $toggle.classList.remove('toggled');\n      }, 400);\n      this.mobile_menu_visible = 0;\n    }\n\n    sidebarToggle() {\n      if (this.sidebarVisible === false) {\n        this.sidebarOpen();\n      } else {\n        this.sidebarClose();\n      }\n    }\n\n    getTitle() {\n      var titlee = this.location.prepareExternalUrl(this.location.path());\n\n      if (titlee.charAt(0) === '#') {\n        titlee = titlee.slice(1);\n      }\n\n      for (let i = 0; i < this.listTitles.length; i++) {\n        if (this.listTitles[i].type === \"link\" && this.listTitles[i].path === titlee) {\n          return this.listTitles[i].title;\n        } else if (this.listTitles[i].type === \"sub\") {\n          for (let j = 0; j < this.listTitles[i].children.length; j++) {\n            let subtitle = this.listTitles[i].path + '/' + this.listTitles[i].children[j].path; // console.log(subtitle)\n            // console.log(titlee)\n\n            if (subtitle === titlee) {\n              return this.listTitles[i].children[j].title;\n            }\n          }\n        }\n      }\n\n      return 'Dashboard';\n    }\n\n    getPath() {\n      return this.location.prepareExternalUrl(this.location.path());\n    }\n\n  }\n\n  NavbarComponent.ɵfac = function NavbarComponent_Factory(t) {\n    return new (t || NavbarComponent)(i0.ɵɵdirectiveInject(i1.Location), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  NavbarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NavbarComponent,\n    selectors: [[\"app-navbar-cmp\"]],\n    viewQuery: function NavbarComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.button = _t.first);\n      }\n    },\n    decls: 61,\n    vars: 2,\n    consts: [[1, \"navbar\", \"navbar-expand-lg\", \"navbar-transparent\", \"navbar-absolute\"], [\"navbar\", \"\"], [1, \"container-fluid\"], [1, \"navbar-wrapper\"], [1, \"navbar-minimize\"], [\"mat-raised-button\", \"\", 1, \"btn\", \"btn-just-icon\", \"btn-white\", \"btn-fab\", \"btn-round\", 3, \"click\"], [1, \"material-icons\", \"text_align-center\", \"visible-on-sidebar-regular\"], [1, \"material-icons\", \"design_bullet-list-67\", \"visible-on-sidebar-mini\"], [1, \"navbar-brand\", 3, \"href\"], [\"mat-button\", \"\", \"type\", \"button\", 1, \"navbar-toggler\", \"btn-no-ripple\", 3, \"click\"], [1, \"sr-only\"], [1, \"navbar-toggler-icon\", \"icon-bar\"], [\"id\", \"navigation\", 1, \"collapse\", \"navbar-collapse\", \"justify-content-end\"], [1, \"navbar-form\"], [1, \"input-group\", \"no-border\"], [\"type\", \"text\", \"value\", \"\", \"placeholder\", \"Search...\", 1, \"form-control\"], [\"mat-raised-button\", \"\", \"type\", \"submit\", 1, \"btn\", \"btn-white\", \"btn-round\", \"btn-just-icon\"], [1, \"material-icons\"], [1, \"ripple-container\"], [1, \"navbar-nav\"], [1, \"nav-item\"], [\"href\", \"#pablo\", 1, \"nav-link\"], [1, \"d-lg-none\", \"d-md-block\"], [1, \"nav-item\", \"dropdown\"], [\"href\", \"#pablo\", \"id\", \"navbarDropdownMenuLink\", \"data-toggle\", \"dropdown\", \"aria-haspopup\", \"true\", \"aria-expanded\", \"false\", 1, \"nav-link\"], [1, \"notification\"], [\"aria-labelledby\", \"navbarDropdownMenuLink\", 1, \"dropdown-menu\", \"dropdown-menu-right\"], [\"href\", \"#\", 1, \"dropdown-item\"]],\n    template: function NavbarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"nav\", 0, 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function NavbarComponent_Template_button_click_5_listener() {\n          return ctx.minimizeSidebar();\n        });\n        i0.ɵɵelementStart(6, \"i\", 6);\n        i0.ɵɵtext(7, \"more_vert\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"i\", 7);\n        i0.ɵɵtext(9, \"view_list\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"a\", 8);\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function NavbarComponent_Template_button_click_12_listener() {\n          return ctx.sidebarToggle();\n        });\n        i0.ɵɵelementStart(13, \"span\", 10);\n        i0.ɵɵtext(14, \"Toggle navigation\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"span\", 11)(16, \"span\", 11)(17, \"span\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 12)(19, \"form\", 13)(20, \"div\", 14);\n        i0.ɵɵelement(21, \"input\", 15);\n        i0.ɵɵelementStart(22, \"button\", 16)(23, \"i\", 17);\n        i0.ɵɵtext(24, \"search\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"div\", 18);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"ul\", 19)(27, \"li\", 20)(28, \"a\", 21)(29, \"i\", 17);\n        i0.ɵɵtext(30, \"dashboard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"p\")(32, \"span\", 22);\n        i0.ɵɵtext(33, \"Stats\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(34, \"li\", 23)(35, \"a\", 24)(36, \"i\", 17);\n        i0.ɵɵtext(37, \"notifications\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"span\", 25);\n        i0.ɵɵtext(39, \"5\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"p\")(41, \"span\", 22);\n        i0.ɵɵtext(42, \"Some Actions\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(43, \"div\", 26)(44, \"a\", 27);\n        i0.ɵɵtext(45, \"Mike John responded to your email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"a\", 27);\n        i0.ɵɵtext(47, \"You have 5 new tasks\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"a\", 27);\n        i0.ɵɵtext(49, \"You're now friend with Andrew\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"a\", 27);\n        i0.ɵɵtext(51, \"Another Notification\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"a\", 27);\n        i0.ɵɵtext(53, \"Another One\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(54, \"li\", 20)(55, \"a\", 21)(56, \"i\", 17);\n        i0.ɵɵtext(57, \"person\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(58, \"p\")(59, \"span\", 22);\n        i0.ɵɵtext(60, \"Account\");\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵpropertyInterpolate(\"href\", ctx.getPath(), i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.getTitle(), \"\");\n      }\n    },\n    encapsulation: 2\n  });\n  return NavbarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}